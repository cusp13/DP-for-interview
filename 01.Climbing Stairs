You are climbing a staircase. It takes n steps to reach the top.

Each time you can either climb 1 or 2 steps. In how many distinct ways can you climb to the top?

 

Example 1:

Input: n = 2
Output: 2
Explanation: There are two ways to climb to the top.
1. 1 step + 1 step
2. 2 steps

Approach:-
Try to represent the problem in terms of indexes.
Try all possible choices/ways at every index according to the problem statement.
If the question states
Count all the ways â€“ return sum of all choices/ways.
Find maximum/minimum- return the choice/way with maximum/minimum output.


//CODE
int ways(int n,vector<int>&dp){
    if(n==0 || n==1){
        return 1;
    }
    if(dp[n]!=-1){
        return dp[n];
    }
    int ans = ways(n-1,dp)+ways(n-2,dp);

    return dp[n]=ans;


}
    int climbStairs(int n) {
        vector<int>dp(n+1,-1);
        return ways(n,dp);
    }
